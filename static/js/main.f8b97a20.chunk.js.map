{"version":3,"sources":["DatepickerComponents/days.js","DatepickerComponents/monthDate.js","DatepickerComponents/RightArrow.js","DatepickerComponents/LeftArrow.js","DatepickerComponents/monthName.js","DatepickerComponents/Datepicker.js","App.js","index.js"],"names":["Days","weekDays","daysMarkup","map","weekday","index","className","key","trimmedDay","substr","Fragment","this","React","Component","MonthDate","currDate","Date","getDate","state","todayDate","year","getFullYear","month","getMonth","activeIndex","getMonthDate","firstOfMonth","firstDayOfWeek","getDay","weekDateArr","lastDayOfMonth","dateArr","currentDate","j","push","i","length","months","props","weekLists","weekList","weekListIndex","weekDate","weekDateIndex","RightArrow","onClick","goToNextSlide","aria-hidden","LeftArrow","goToPrevSlide","MonthName","slideWidth","document","querySelector","clientWidth","setState","translateValue","Datepicker","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8b97a20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Days extends React.Component {\r\n  weekDays = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n  ];\r\n  daysMarkup = this.weekDays.map((weekday, index) => {\r\n    return (\r\n      <div className=\"weekday\" key={index}>\r\n        {this.trimmedDay(weekday)}\r\n      </div>\r\n    );\r\n  });\r\n  trimmedDay(weekday) {\r\n    return weekday.substr(0, 3);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"days-container\">{this.daysMarkup}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Days;\r\n","import React from \"react\";\r\n\r\nclass MonthDate extends React.Component {\r\n  currDate = new Date().getDate();\r\n\r\n  state = {\r\n    todayDate: new Date().getDate(),\r\n    year: new Date().getFullYear(),\r\n    month: new Date().getMonth(),\r\n    activeIndex: 0,\r\n  };\r\n  getMonthDate = (month, year) => {\r\n    const firstOfMonth = new Date(year, month, 1);\r\n    const firstDayOfWeek = firstOfMonth.getDay();\r\n    let weekDateArr = [[]];\r\n    const lastOfMonth = new Date(year, month + 1, 0);\r\n    const lastDayOfMonth = lastOfMonth.getDay();\r\n    let dateArr = weekDateArr[0];\r\n\r\n    let currentDate = firstOfMonth;\r\n    for (let j = 0; j < 6; j++) {\r\n      if (firstDayOfWeek == 0) {\r\n        dateArr.push(null);\r\n      }\r\n    }\r\n    for (let i = 1; i < firstDayOfWeek; i++) {\r\n      dateArr.push(null);\r\n    }\r\n\r\n    const WEEK_LENGTH = 7;\r\n    while (currentDate.getMonth() === month) {\r\n      if (dateArr.length === WEEK_LENGTH) {\r\n        dateArr = [];\r\n        weekDateArr.push(dateArr);\r\n      }\r\n\r\n      dateArr.push(currentDate.getDate());\r\n      currentDate = new Date(year, month, currentDate.getDate() + 1);\r\n    }\r\n    if (dateArr.length !== WEEK_LENGTH) {\r\n      for (let j = lastDayOfMonth + 1; j <= 7; j++) {\r\n        dateArr.push(null);\r\n      }\r\n    }\r\n    while (dateArr.length < 7) {\r\n      dateArr.push(currentDate.getDate());\r\n    }\r\n    return weekDateArr;\r\n  };\r\n\r\n  render() {\r\n    const months = this.props.month;\r\n    var weekLists = [];\r\n    return months.map((month, index) => {\r\n      {\r\n        weekLists = this.getMonthDate(index, this.state.year);\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"month-date-container\">\r\n            <div\r\n              className={\r\n                this.props.activeIndex === index\r\n                  ? `active-month month-date`\r\n                  : `month-date`\r\n              }\r\n            >\r\n              {weekLists.map((weekList, weekListIndex) => (\r\n                <div className=\"date-container\" key={weekListIndex}>\r\n                  {weekList.map((weekDate, weekDateIndex) => (\r\n                    <span\r\n                      className={\r\n                        weekDate === this.state.todayDate &&\r\n                        this.state.month === index\r\n                          ? `date active-date`\r\n                          : `date`\r\n                      }\r\n                    >\r\n                      {weekDate}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n}\r\nexport default MonthDate;\r\n","import React from \"react\";\r\nconst RightArrow = (props) => {\r\n  return (\r\n    <div className=\"nextArrow arrow\" onClick={props.goToNextSlide}>\r\n      <i className=\"fa fa-arrow-right fa-2x\" aria-hidden=\"true\"></i>\r\n    </div>\r\n  );\r\n};\r\nexport default RightArrow;\r\n","import React from \"react\";\r\n\r\nconst LeftArrow = (props) => {\r\n  return (\r\n    <div className=\"backArrow arrow\" onClick={props.goToPrevSlide}>\r\n      <i className=\"fa fa-arrow-left fa-2x\" aria-hidden=\"true\"></i>\r\n    </div>\r\n  );\r\n};\r\nexport default LeftArrow;\r\n","import React from \"react\";\r\nimport RightArrow from \"./RightArrow\";\r\nimport LeftArrow from \"./LeftArrow\";\r\nimport Days from \"./days\";\r\nimport MonthDate from \"./monthDate\";\r\nclass MonthName extends React.Component {\r\n  months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  state = {\r\n    activeIndex: 0,\r\n    // currentMonth: \"\",\r\n    // month: new Date().getMonth(),\r\n    year: new Date().getFullYear(),\r\n  };\r\n  slideWidth = () => {\r\n    return document.querySelector(\".datepickerContainer\").clientWidth;\r\n  };\r\n  goToPrevSlide = () => {\r\n    if (this.state.activeIndex === 0) {\r\n      return this.setState({\r\n        activeIndex: this.months.length - 1,\r\n        translateValue: this.state.translateValue + -this.slideWidth(),\r\n      });\r\n    }\r\n    this.setState(() => ({\r\n      activeIndex: this.state.activeIndex - 1,\r\n      translateValue: this.state.translateValue + this.slideWidth(),\r\n    }));\r\n  };\r\n  goToNextSlide = () => {\r\n    if (this.state.activeIndex === this.months.length - 1) {\r\n      return this.setState({\r\n        activeIndex: 0,\r\n        translateValue: 0,\r\n      });\r\n    } else {\r\n      this.setState(() => ({\r\n        activeIndex: this.state.activeIndex + 1,\r\n        translateValue: this.state.translateValue + -this.slideWidth(),\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"datepickerContainer\">\r\n        <div className=\"datepicker-month\">\r\n          {this.months.map((month, index) => (\r\n            <div>\r\n              <h3\r\n                className={\r\n                  this.state.activeIndex === index\r\n                    ? `monthname activeMonth`\r\n                    : `monthname`\r\n                }\r\n              >\r\n                {month} {this.state.year}\r\n              </h3>\r\n            </div>\r\n          ))}\r\n          <LeftArrow goToPrevSlide={this.goToPrevSlide} />\r\n          <RightArrow goToNextSlide={this.goToNextSlide} />\r\n        </div>\r\n        <Days />\r\n        <MonthDate month={this.months} activeIndex={this.state.activeIndex} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MonthName;\r\n","import React from \"react\";\r\nimport \"../stylesheets/datepicker.css\";\r\nimport Days from \"./days\";\r\nimport MonthDate from \"./monthDate\";\r\nimport MonthName from \"./monthName\";\r\n\r\nclass Datepicker extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MonthName />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Datepicker;\r\n","import React from \"react\";\nimport Datepicker from \"./DatepickerComponents/Datepicker\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Datepicker />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}